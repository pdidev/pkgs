#!/bin/bash
set -e

SUPPRESS_OUTPUT="/dev/null"
OUTPUT_DIR="repositories"

. ./build.conf

while [[ $# -gt 0 ]] && [[ "$1" != "--"* ]] ;
do
	ARG="$1"
	case "$ARG" in
	"--verbose"|"-v")
		PKG_DEBUG_MODE=true
		SUPPRESS_OUTPUT="&1"
		DH_VERBOSE="-e DH_VERBOSE=1"
		set -x
		shift
		;;
	"--fast"|"-f")
		PKG_FAST_MODE=true
		shift
		;;
	"--out"|"-o")
		shift
		OUTPUT_DIR="$1"
		shift
		;;
	*)
		echo "Unexpected argument: ${ARG}"
		exit 1
	esac
done


BASE_DIR="${PWD}"

mkdir -p "${OUTPUT_DIR}"
cd "${OUTPUT_DIR}"
OUTPUT_DIR="${PWD}"

cd "$(mktemp -d --tmpdir PDIDEV_PKGS.XXXXXXXXXXXX.tmdir || exit 1)"
WORK_DIR="${PWD}"
trap "rm -rf ${WORK_DIR}; rm '${OUTPUT_DIR}'/*.list" EXIT


cat<<EOF > "$WORK_DIR/aptly.conf"
{
  "rootDir": "$WORK_DIR/aptly",
  "architectures": ["i386", "amd64", "source"],
  "gpgDisableSign": true,
  "gpgDisableVerify": true,
  "downloadSourcePackages": true,
  "skipLegacyPool": false,
  "FileSystemPublishEndpoints": { "default": { "rootDir": "$OUTPUT_DIR", "linkMethod": "copy" } }
}
EOF

for DIST_ID in ${DISTS}
do
	for VERSION_CODENAME in $(eval echo \$"${DIST_ID}_RELEASES")
	do
		aptly -config="$WORK_DIR/aptly.conf" repo create -distribution="${VERSION_CODENAME}" "${VERSION_CODENAME}" >${SUPPRESS_OUTPUT}
		aptly -config="$WORK_DIR/aptly.conf" publish repo "${VERSION_CODENAME}" filesystem:default:${DIST_ID} >${SUPPRESS_OUTPUT}
	done
	mkdir -p "${WORK_DIR}/${DIST_ID}-incoming"
	for VERSION_CODENAME in $(eval echo \$"${DIST_ID}_RELEASES")
	do
		for PACKAGE in ${PACKAGES}
		do
			if grep -qs "^\s*${DIST_ID}\(:${VERSION_CODENAME}\)\?\s*$" "${BASE_DIR}/${PACKAGE}/dist.exclude"
			then
				echo -e "\n\n  ==== \e[33mSkipping ${PACKAGE} for ${DIST_ID}:${VERSION_CODENAME} as instructed in ${PACKAGE}/dist.exclude \e[0m\n"
				continue
			fi
			echo -e "\n\n  ===> \e[34mBuilding ${PACKAGE} for ${DIST_ID}:${VERSION_CODENAME}...\e[0m\n"
			echo "deb [trusted=yes] file:///etc/apt/sources.list.d/${DIST_ID} ${VERSION_CODENAME} main" > "${OUTPUT_DIR}/local.list"
			test -e "${BASE_DIR}/${PACKAGE}/extrarepo.${DIST_ID}.list" && cp "${BASE_DIR}/${PACKAGE}/extrarepo.${DIST_ID}.list" "${OUTPUT_DIR}"
			test -e "${BASE_DIR}/${PACKAGE}/extrarepo.${DIST_ID}-${VERSION_CODENAME}.list" && cp "${BASE_DIR}/${PACKAGE}/extrarepo.${DIST_ID}-${VERSION_CODENAME}.list" "${OUTPUT_DIR}"
			docker run --rm \
				${DH_VERBOSE} \
				-e "PKG_DEBUG_MODE=${PKG_DEBUG_MODE}" \
				-e "PKG_FAST_MODE=${PKG_FAST_MODE}" \
				-v "${BASE_DIR}/${PACKAGE}:/src" \
				-v "${WORK_DIR}/${DIST_ID}-incoming:/out" \
				-v "${OUTPUT_DIR}:/etc/apt/sources.list.d" \
				pdidevel/${DIST_ID}_builder:${VERSION_CODENAME} -j
			rm "${OUTPUT_DIR}"/*.list
			aptly -config="$WORK_DIR/aptly.conf" repo include -accept-unsigned "${WORK_DIR}/${DIST_ID}-incoming"
			aptly -config="$WORK_DIR/aptly.conf" publish update "${VERSION_CODENAME}" filesystem:default:${DIST_ID}
			echo -e "\n  <=== \e[32mDone building ${PACKAGE} for ${DIST_ID}:${VERSION_CODENAME}!\e[0m\n\n"
		done
	done
done
