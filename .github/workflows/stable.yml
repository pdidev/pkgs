name: stable build
on:
  push:
    branches: [ stable ]
  schedule:
    - cron:  '27 1 3 * *' # monthly build on 1st of each month, 1:27AM
jobs:
  build_and_publish:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distrib: [ debian, fedora, ubuntu ]
    steps:
      - name: Checkout packages
        uses: actions/checkout@v2
        with:
          ref: "stable"
      - name: Checkout builder script
        uses: actions/checkout@v2
        with:
          repository: jbigot/pkg_builder
          path: pkg_builder
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Checkout distrib repo
        uses: actions/checkout@v2
        with:
          repository: pdidev/repo
          path: repo.${{ matrix.distrib }}
          ssh-key: ${{ secrets.PDIDEV_REPO_KEY }}
      - name: Install deps
        run: |
          sudo curl -o /etc/apt/trusted.gpg.d/deb.myguard.nl.gpg https://deb.myguard.nl/pool/deb.myguard.nl.gpg
          . /etc/os-release
          echo "deb [arch=amd64] http://deb.myguard.nl $VERSION_CODENAME main" | sudo tee /etc/apt/sources.list.d/deb.myguard.nl.list
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install devscripts equivs aptly
          pip3.8 install -r pkg_builder/requirements.txt
      - name: Build packages
        env:
          KEY_PASSPHRASE: ${{ secrets.KEY_PASSPHRASE }}
          DISTRIB: ${{ matrix.distrib }}
        run: |
          git -C repo.${DISTRIB} config user.email "github.action@example.com"
          git -C repo.${DISTRIB} config user.name  "Github Action"
          git -C repo.${DISTRIB} fetch origin ${DISTRIB}
          git -C repo.${DISTRIB} checkout --orphan "${DISTRIB}"
          git -C repo.${DISTRIB} rm -rf .
          sed "s%pdidev/repo/%pdidev/repo/%g" -i build.conf
          python3.8 pkg_builder/pkgbuild -D ${DISTRIB} -j 3 -p "${KEY_PASSPHRASE}"
          git -C repo.${DISTRIB} add -A .
          git -C repo.${DISTRIB} commit -C origin/${DISTRIB}
          git -C repo.${DISTRIB} push -f origin "${DISTRIB}"
